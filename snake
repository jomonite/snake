<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SNAKE</title>
</head>
<body>
    <canvas id="canvas" width="720" height="480"></canvas>

    <script>
        let canvas = document.getElementById('canvas');
        let ctx = canvas.getContext('2d');

        let snake = [{ x: 150, y: 150 }, { x: 140, y: 150 }, { x: 130, y: 150 }];
        let food = { x: 300, y: 300 };
        let direction = 'RIGHT';
        let gameSpeed = 100;

        // Draw the snake and the food
        function draw() {
            // Clear the canvas
            ctx.fillStyle = 'black';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            // Draw the snake
            ctx.fillStyle = 'white';
            for (let i = 0; i < snake.length; i++) {
                ctx.fillRect(snake[i].x, snake[i].y, 10, 10); // Each segment is a 10x10 block
            }

            // Draw the food
            ctx.fillStyle = 'yellow';
            ctx.fillRect(food.x, food.y, 10, 10); // Food is also a 10x10 block
        }

        // Update the snake position based on direction
        function update() {
            let head = Object.assign({}, snake[0]);

            if (direction === 'UP') head.y -= 10;
            if (direction === 'DOWN') head.y += 10;
            if (direction === 'LEFT') head.x -= 10;
            if (direction === 'RIGHT') head.x += 10;

            // Add the new head to the snake array
            snake.unshift(head);

            // Check if snake eats food
            if (head.x === food.x && head.y === food.y) {
                // Generate new food position
                food.x = Math.floor(Math.random() * (canvas.width / 10)) * 10;
                food.y = Math.floor(Math.random() * (canvas.height / 10)) * 10;
            } else {
                // Remove the last segment of the snake if no food is eaten
                snake.pop();
            }

            // Check for collisions with walls or itself
            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height || collisionWithSelf()) {
                gameOver();
            }
        }

        // Check if the snake collides with itself
        function collisionWithSelf() {
            for (let i = 1; i < snake.length; i++) {
                if (snake[i].x === snake[0].x && snake[i].y === snake[0].y) {
                    return true;
                }
            }
            return false;
        }

        // Handle keyboard input for snake direction
        function handleKeyPress(event) {
            if (event.key === 'ArrowUp' && direction !== 'DOWN') {
                direction = 'UP';
            } else if (event.key === 'ArrowDown' && direction !== 'UP') {
                direction = 'DOWN';
            } else if (event.key === 'ArrowLeft' && direction !== 'RIGHT') {
                direction = 'LEFT';
            } else if (event.key === 'ArrowRight' && direction !== 'LEFT') {
                direction = 'RIGHT';
            }
        }

        // Game over function
        function gameOver() {
            alert("habe dich lieb papa :) !");
            snake = [{ x: 150, y: 150 }, { x: 140, y: 150 }, { x: 130, y: 150 }];
            direction = 'RIGHT';
            gameSpeed = 100;
        }

        // Main game loop
        function gameLoop() {
            update();
            draw();
        }

        // Set up the game loop and event listener for keyboard input
        document.addEventListener('keydown', handleKeyPress);
        setInterval(gameLoop, gameSpeed);
    </script>
</body>
</html>
